!function(t,e){"use strict";function i({layer:t,coords:e,current:i,loadState:o}){return{layer:t||null,coords:e||null,current:i||!1,loadState:o||null}}const o=(e=e&&e.hasOwnProperty("default")?e.default:e).GridLayer.extend({initialize:function(t,i,o){e.Util.setOptions(this,i),this._url=t,this._geojsonLayer=e.geoJSON(null,o)},onAdd:function(){this._map.addLayer(this._geojsonLayer),this._tiles={},this._resetView()},onRemove:function(t){this._invalidateAll(),this._map.removeLayer(this._geojsonLayer),delete this._geojsonLayer},redraw:function(){this._invalidateAll(),this._resetView()},setURL:function(t){this._url=t},setGeoJSONOptions:function(t){this._geojsonLayer.options=t},_invalidateAll:function(){this._geojsonLayer.clearLayers(),this._tileZoom=void 0,delete this._tiles,this._tiles={}},_setView:function(t,e,i,o){let s=this._clampZoom(Math.round(e));(void 0!==this.options.maxZoom&&s>this.options.maxZoom||void 0!==this.options.minZoom&&s<this.options.minZoom)&&(s=void 0);var n=this.options.updateWhenZooming&&s!==this._tileZoom;o&&!n||(this._invalidateAll(),this._tileZoom=s,this._resetGrid(),void 0!==s&&this._update(t))},_update:function(t){const o=this._map;if(!o)return;const s=this._clampZoom(o.getZoom());if(void 0===t&&(t=o.getCenter()),void 0===this._tileZoom)return;const n=this._getTiledPixelBounds(t),l=this._pxBoundsToTileRange(n),a=l.getCenter(),r=[],_=this.options.keepBuffer,h=new e.Bounds(l.getBottomLeft().subtract([_,-_]),l.getTopRight().add([_,-_]));if(!(isFinite(l.min.x)&&isFinite(l.min.y)&&isFinite(l.max.x)&&isFinite(l.max.y)))throw new Error("Attempted to load an infinite number of tiles");for(var d in this._tiles){var f=this._tiles[d].coords;f&&(f.z===this._tileZoom&&h.contains(new e.Point(f.x,f.y))||(this._tiles[d].current=!1))}if(Math.abs(s-this._tileZoom)>1)this._setView(t,s);else{for(var m=l.min.y;m<=l.max.y;m++)for(var u=l.min.x;u<=l.max.x;u++){var c=new e.Point(u,m);if(c.z=this._tileZoom,!this._isValidTile(c))continue;const t=this._tileCoordsToKey(c),o=this._tiles[t];o?o.current=!0:(this._tiles[t]=i({loadState:"loading"}),r.push(c))}r.sort((t,e)=>t.distanceTo(a)-e.distanceTo(a)),0!==r.length&&(this._loading||(this._loading=!0),Promise.all(r.map(t=>this._addTile(t))).then(()=>this._pruneTiles()))}},_addTile:async function(t){const o=this._tileCoordsToKey(t),s=e.Util.template(this._url,t),n=await fetch(s);if(!n.ok)return void(this._tiles[o]=i({loadState:"failed"}));const l=await n.json(),a=e.geoJSON(l,this._geojsonLayer.options);this._tileZoom===t.z&&(this._geojsonLayer.addLayer(a),this._tiles[o]=i({layer:a,coords:t,current:!0,loadState:"loaded"}))},_pruneTiles:function(){const t=Object.keys(this._tiles);for(let e=0;e<t.length;e++){const i=t[e],o=this._tiles[i];o&&!o.current&&(this._geojsonLayer.removeLayer(o.layer),delete this._tiles[i])}},bringToFront:e.Util.falseFn,bringToBack:e.Util.falseFn,getContainer:e.Util.falseFn,setOpacity:e.Util.falseFn,setZIndex:e.Util.falseFn,createTile:e.Util.falseFn,_updateZIndex:e.Util.falseFn,_setAutoZIndex:e.Util.falseFn,_updateOpacity:e.Util.falseFn,_onOpaqueTile:e.Util.falseFn,_initContainer:e.Util.falseFn,_updateLevels:e.Util.falseFn,_onUpdateLevel:e.Util.falseFn,_onRemoveLevel:e.Util.falseFn,_onCreateLevel:e.Util.falseFn,_retainParent:e.Util.falseFn,_retainChildren:e.Util.falseFn,_animateZoom:e.Util.falseFn,_initTile:e.Util.falseFn,_removeTile:e.Util.falseFn,_removeTilesAtZoom:e.Util.falseFn,_removeAllTiles:e.Util.falseFn,_setZoomTransforms:e.Util.falseFn,_setZoomTransform:e.Util.falseFn,_tileReady:e.Util.falseFn,_getTilePos:e.Util.falseFn,_noTilesToLoad:e.Util.falseFn});t.TileGeoJSON=o,t.tileGeoJSON=((t,e,i)=>new o(t,e,i)),void 0!==window.L&&Object.keys(t).forEach(e=>{t.hasOwnProperty(e)&&(window.L[e]=t[e])})}(this["leaflet-tilegeojson"]=this["leaflet-tilegeojson"]||{},L);